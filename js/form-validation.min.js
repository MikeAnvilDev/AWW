function validateForm(e) { displayContentOverlay(!0); var a = $(e), l = a.closest("form.ml-validation"); l.closest("section"); $(".ml-alert").removeClass("ml-alert"), $(".ml-val-message").remove(); var t = null, r = $("input, select, textarea"); return r.each(function () { var e = $(this); if (e.is("input")) { if (e.is("[ml-val]")) { var a = validateInputField(e); a || null != t || (t = e) } } else if (e.is("select") && e.is("[ml-val]")) { var a = validateSelectField(e); a || null != t || (t = e) } }), null != t ? (displayContentOverlay(!1), $("body").animate({ scrollTop: t.closest(".ml-val-container").position().top - 60 }), !1) : !0 } function validateInputField(e) { var a = !0; e.val(e.val().replace(/^\s+|\s+$/g, "")); var l = !1; if (e.is("[ml-val-required]") && (l = "true" == e.attr("ml-val-required")), l || e.val().length > 0) { var t = ""; e.is("[ml-val-type]") && (t = e.attr("ml-val-type")); var r = ""; e.is("[ml-val-format]") && (r = e.attr("ml-val-format")); var n = ""; e.is("[ml-val-max]") && (n = e.attr("ml-val-max")); var i = ""; e.is("[ml-val-min]") && (i = e.attr("ml-val-min")); var s = ""; e.is("[ml-val-label]") && (s = e.attr("ml-val-label")); var v = ""; if ("text" == t && (v = validateText(e.val(), s, i)), "number" == t && (v = validateNumber(e.val(), s, r, n, i)), "date" == t && (v = validateDate(e.val(), s, n, i)), "time" == t && (v = validateTime(e.val(), s, n, i)), e.is("[type=checkbox]") && (v = validateCheckbox(e, s)), v.length > 0) { a = !1, e.addClass("ml-alert"); var o = e.closest(".ml-val-container"), d = o.find(".ml-val-message"); 0 == d.length && (d = $('<p class="ml-val-message"></p>'), d.prependTo(o)), d.append(v + " ") } } return a } function validateSelectField(e) { var a = !0, l = !1; e.is("[ml-val-required]") && (l = "true" == e.attr("ml-val-required")); var t = ""; e.is("[ml-val-label]") && (t = e.attr("ml-val-label")); var r = ""; if (e.is("[ml-val-invalid-indexes]") && (r = e.attr("ml-val-invalid-indexes")), l) { var n = validateSelect(e[0], t, r); if (n.length > 0) { a = !1, e.addClass("ml-alert"); var i = e.closest(".ml-val-container"), s = i.find(".ml-val-message"); 0 == s.length && (s = $('<p class="ml-val-message"></p>'), s.prependTo(i)), s.append(n + " ") } } return a } function validateCheckbox(e) { var a = "", l = !1; e.is("[ml-val-required]") && (l = "true" == e.attr("ml-val-required")); var t = ""; if (e.is("[ml-val-label]") && (t = e.attr("ml-val-label")), l) { var r = e.attr("name"), n = $("input[type=checkbox][name=" + r + "]:checked"); 0 == n.length && (a = t) } return a } function validateText(e, a, l, t) { var r = ""; return e = e.trim(), 0 == e.length ? r = "Please a value for " + a + "." : e.length < t && (r = "Please a value for " + a + " that is at least " + t + " character" + (1 != t ? "s" : "") + "."), r } function validateNumber(e, a, l, t, r) { var n = ""; if ("integer" == l) if (-1 == e.search(/^\s*(\+|-)?\d+\s*$/)) n = e.length > 0 ? "Please a valid integer value for " + a + "." : "Please enter an integer value for " + a + "."; else { var i = parseInt(e); t.length > 0 && r.length > 0 ? (i > t || r > i) && (n = "Please enter an integer value for " + a + " between " + r + " and " + t + ".") : t.length > 0 ? i > t && (n = "Please enter an integer value for " + a + " less than or equal to " + t + ".") : r.length > 0 && r > i && (n = "Please enter an integer value for " + a + " greater than or equal to " + r + ".") } else if ("decimal" == l) if (-1 == e.search(/^\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*$/)) n = e.length > 0 ? "Please enter a valid decimal value for " + a + "." : "Please enter a decimal value for " + a + "."; else { var s = parseFloat(e); t.length > 0 && r.length > 0 ? (s > t || r > s) && (n = "Please enter a decimal value for " + a + " between " + r + " and " + t + ".") : t.length > 0 ? s > t && (n = "Please enter a decimal value for " + a + " less than or equal to " + t + ".") : r.length > 0 && r > s && (n = "Please enter a decimal value for " + a + " greater than or equal to " + r + ".") } else if ("currency" == l) if (-1 == e.search(/^\s*(\+|-)?((\d+(\.\d\d)?)|(\.\d\d))\s*$/)) n = e.length > 0 ? "Please enter a valid dollar amount for " + a + "." : "Please enter a dollar amount for " + a + "."; else { var v = parseFloat(e); t.length > 0 && r.length > 0 ? (v > t || r > v) && (n = "Please enter a dollar amount for " + a + " between " + r + " and " + t + ".") : t.length > 0 ? s > t && (n = "Please enter a dollar amount for " + a + " less than or equal to " + t + ".") : r.length > 0 && r > s && (n = "Please enter a dollar amount for " + a + " greater than or equal to " + r + ".") } return n } function validateDate(e, a, l, t) { var r = "", n = !1; if (e.length > 0) { if (e.indexOf("/") >= 0 ? /^\d{1,2}\/\d{1,2}\/\d{4}$/.test(e) || (r = "Please a valid date for " + a + ". Enter in MM/DD/YYYY format.") : (n = !0, /^\d{4}-\d{2}-\d{2}/.test(e) || (r = "Please a valid date for " + a + ". Enter in YYYY-MM-DD format.")), 0 == r.length) { var i = new Array, s = 0, v = 0, o = 0; n ? (i = e.split("-"), s = parseInt(i[2]), v = parseInt(i[1]), o = parseInt(i[0])) : (i = e.split("/"), s = parseInt(i[1]), v = parseInt(i[0]), o = parseInt(i[2])), (1e3 > o || o > 3e3 || 0 == v || v > 12) && (r = "Please a valid date for " + a + ". Year or Month outside of range."); var d = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; if ((o % 400 == 0 || o % 100 != 0 && o % 4 == 0) && (d[1] = 29), (0 >= s || s > d[v - 1]) && (r = "Please a valid date for " + a + ". Day is not within month."), 0 == r.length) { var m = new Date(o, v - 1, s, 23, 59, 59, 999); if (l.length > 0 && t.length > 0) { var f = new Date(this.valueOf()); f.setDate(f.getDate() + l); var u = new Date(this.valueOf()); u.setDate(u.getDate() + t), m > f || u > m ? r = "Please enter a date for " + a + " between " + u + " and " + f + "." : l.length > 0 ? m > f && (r = "Please enter a date for " + a + " before or on " + f + ".") : t.length > 0 && u > m && (r = "Please enter a date for " + a + " after or on " + u + ".") } } } } else r = "Please a date for " + a + ". Enter in MM/DD/YYYY format."; return r } function validateTime(e, a, l, t) { var r = ""; if (e.length > 0) { if (e.indexOf(" ") >= 0) { var n = e.split(" "); -1 == n[0].search(/^(0?[1-9]|1[012]):[0-5][0-9]$/) && (r = "Please enter a valid 12-hour time (HH:MM AM) value for " + a + "."), "AM" != n[1] && "PM" != n[1] && (r = "Please enter a valid 12-hour time (HH:MM AM) value for " + a + "."); var i = n[0].split(":"); e = parseInt(i[0]) + ("AM" == n[1] ? 12 != i[0] ? 0 : -12 : 12 != i[0] ? 12 : 0) + ":" + parseInt(i[1]) } else -1 == e.search(/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/) && (r = e.length > 0 ? "Please enter a valid time value for " + a + "." : "Please enter a time value for " + a + "."); if (0 == r.length) if (l.length > 0 && t.length > 0) { var s = convertTimeToDecimal(e), v = convertTimeToDecimal(t), o = convertTimeToDecimal(l); (v > s || s > o) && (r = "Please enter a time for " + a + " between " + t + " and " + l + ".") } else if (l.length > 0) { var s = convertTimeToDecimal(e), o = convertTimeToDecimal(l); s > o && (r = "Please enter a time for " + a + " less than or equal to " + l + ".") } else if (t.length > 0) { var s = convertTimeToDecimal(e), v = convertTimeToDecimal(t); v > s && (r = "Please enter a time for " + a + " greater than or equal to " + l + ".") } } else r = "Please enter a 12-hour time (HH:MM AM) value for " + a + "."; return r } function convertTimeToDecimal(e) { var a = e.split(":"), l = parseInt(a[0]) + parseInt(a[1]) / 60; return l } function validateSelect(e, a, l) { var t = "", r = e.selectedIndex; l.split(","); return l.indexOf(r) > -1 && (t = "Please make a valid selection for " + a + "."), t }