function validateForm(a) { displayContentOverlay(!0); var b = $(a), c = b.closest("form.ml-validation"); c.closest("section"); $(".ml-alert").removeClass("ml-alert"), $(".ml-val-message").remove(); var e = null, f = $("input, select, textarea"); return f.each(function () { var a = $(this); if (a.is("input")) { if (a.is("[ml-val]")) { var b = validateInputField(a); b || null != e || (e = a) } } else if (a.is("select") && a.is("[ml-val]")) { var b = validateSelectField(a); b || null != e || (e = a) } }), null == e || (displayContentOverlay(!1), $("body").animate({ scrollTop: e.closest(".ml-val-container").position().top - 60 }), !1) } function validateInputField(a) { var b = !0; a.val(a.val().replace(/^\s+|\s+$/g, "")); var c = !1; if (a.is("[ml-val-required]") && (c = "true" == a.attr("ml-val-required")), c || a.val().length > 0) { var d = ""; a.is("[ml-val-type]") && (d = a.attr("ml-val-type")); var e = ""; a.is("[ml-val-format]") && (e = a.attr("ml-val-format")); var f = ""; a.is("[ml-val-max]") && (f = a.attr("ml-val-max")); var g = ""; a.is("[ml-val-min]") && (g = a.attr("ml-val-min")); var h = ""; a.is("[ml-val-label]") && (h = a.attr("ml-val-label")); var i = ""; if ("text" == d && (i = validateText(a.val(), h, g)), "number" == d && (i = validateNumber(a.val(), h, e, f, g)), "date" == d && (i = validateDate(a.val(), h, f, g)), "time" == d && (i = validateTime(a.val(), h, f, g)), a.is("[type=checkbox]") && (i = validateCheckbox(a, h)), i.length > 0) { b = !1, a.addClass("ml-alert"); var j = a.closest(".ml-val-container"), k = j.find(".ml-val-message"); 0 == k.length && (k = $('<p class="ml-val-message"></p>'), k.prependTo(j)), k.append(i + " ") } } return b } function validateSelectField(a) { var b = !0, c = !1; a.is("[ml-val-required]") && (c = "true" == a.attr("ml-val-required")); var d = ""; a.is("[ml-val-label]") && (d = a.attr("ml-val-label")); var e = ""; if (a.is("[ml-val-invalid-indexes]") && (e = a.attr("ml-val-invalid-indexes")), c) { var f = validateSelect(a[0], d, e); if (f.length > 0) { b = !1, a.addClass("ml-alert"); var g = a.closest(".ml-val-container"), h = g.find(".ml-val-message"); 0 == h.length && (h = $('<p class="ml-val-message"></p>'), h.prependTo(g)), h.append(f + " ") } } return b } function validateCheckbox(a) { var b = "", c = !1; a.is("[ml-val-required]") && (c = "true" == a.attr("ml-val-required")); var d = ""; if (a.is("[ml-val-label]") && (d = a.attr("ml-val-label")), c) { var e = a.attr("name"), f = $("input[type=checkbox][name=" + e + "]:checked"); 0 == f.length && (b = d) } return b } function validateText(a, b, c, d) { var e = ""; return a = a.trim(), 0 == a.length ? e = "Please a value for " + b + "." : a.length < d && (e = "Please a value for " + b + " that is at least " + d + " character" + (1 != d ? "s" : "") + "."), e } function validateNumber(a, b, c, d, e) { var f = ""; if ("integer" == c) if (a.search(/^\s*(\+|-)?\d+\s*$/) == -1) f = a.length > 0 ? "Please a valid integer value for " + b + "." : "Please enter an integer value for " + b + "."; else { var g = parseInt(a); d.length > 0 && e.length > 0 ? (g > d || g < e) && (f = "Please enter an integer value for " + b + " between " + e + " and " + d + ".") : d.length > 0 ? g > d && (f = "Please enter an integer value for " + b + " less than or equal to " + d + ".") : e.length > 0 && g < e && (f = "Please enter an integer value for " + b + " greater than or equal to " + e + ".") } else if ("decimal" == c) if (a.search(/^\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*$/) == -1) f = a.length > 0 ? "Please enter a valid decimal value for " + b + "." : "Please enter a decimal value for " + b + "."; else { var h = parseFloat(a); d.length > 0 && e.length > 0 ? (h > d || h < e) && (f = "Please enter a decimal value for " + b + " between " + e + " and " + d + ".") : d.length > 0 ? h > d && (f = "Please enter a decimal value for " + b + " less than or equal to " + d + ".") : e.length > 0 && h < e && (f = "Please enter a decimal value for " + b + " greater than or equal to " + e + ".") } else if ("currency" == c) if (a.search(/^\s*(\+|-)?((\d+(\.\d\d)?)|(\.\d\d))\s*$/) == -1) f = a.length > 0 ? "Please enter a valid dollar amount for " + b + "." : "Please enter a dollar amount for " + b + "."; else { var i = parseFloat(a); d.length > 0 && e.length > 0 ? (i > d || i < e) && (f = "Please enter a dollar amount for " + b + " between " + e + " and " + d + ".") : d.length > 0 ? h > d && (f = "Please enter a dollar amount for " + b + " less than or equal to " + d + ".") : e.length > 0 && h < e && (f = "Please enter a dollar amount for " + b + " greater than or equal to " + e + ".") } return f } function validateDate(a, b, c, d) { var e = "", f = !1; if (a.length > 0) { if (a.indexOf("/") >= 0 ? /^\d{1,2}\/\d{1,2}\/\d{4}$/.test(a) || (e = "Please a valid date for " + b + ". Enter in MM/DD/YYYY format.") : (f = !0, /^\d{4}-\d{2}-\d{2}/.test(a) || (e = "Please a valid date for " + b + ". Enter in YYYY-MM-DD format.")), 0 == e.length) { var g = new Array, h = 0, i = 0, j = 0; f ? (g = a.split("-"), h = parseInt(g[2]), i = parseInt(g[1]), j = parseInt(g[0])) : (g = a.split("/"), h = parseInt(g[1]), i = parseInt(g[0]), j = parseInt(g[2])), (j < 1e3 || j > 3e3 || 0 == i || i > 12) && (e = "Please a valid date for " + b + ". Year or Month outside of range."); var k = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; if ((j % 400 == 0 || j % 100 != 0 && j % 4 == 0) && (k[1] = 29), (h <= 0 || h > k[i - 1]) && (e = "Please a valid date for " + b + ". Day is not within month."), 0 == e.length) { var l = new Date(j, i - 1, h, 23, 59, 59, 999); if (c.length > 0 && d.length > 0) { var m = new Date(this.valueOf()); m.setDate(m.getDate() + c); var n = new Date(this.valueOf()); n.setDate(n.getDate() + d), l > m || l < n ? e = "Please enter a date for " + b + " between " + n + " and " + m + "." : c.length > 0 ? l > m && (e = "Please enter a date for " + b + " before or on " + m + ".") : d.length > 0 && l < n && (e = "Please enter a date for " + b + " after or on " + n + ".") } } } } else e = "Please a date for " + b + ". Enter in MM/DD/YYYY format."; return e } function validateTime(a, b, c, d) { var e = ""; if (a.length > 0) { if (a.indexOf(" ") >= 0) { var f = a.split(" "); f[0].search(/^(0?[1-9]|1[012]):[0-5][0-9]$/) == -1 && (e = "Please enter a valid 12-hour time (HH:MM AM) value for " + b + "."), "AM" != f[1] && "PM" != f[1] && (e = "Please enter a valid 12-hour time (HH:MM AM) value for " + b + "."); var g = f[0].split(":"); a = parseInt(g[0]) + ("AM" == f[1] ? 12 != g[0] ? 0 : -12 : 12 != g[0] ? 12 : 0) + ":" + parseInt(g[1]) } else a.search(/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/) == -1 && (e = a.length > 0 ? "Please enter a valid time value for " + b + "." : "Please enter a time value for " + b + "."); if (0 == e.length) if (c.length > 0 && d.length > 0) { var h = convertTimeToDecimal(a), i = convertTimeToDecimal(d), j = convertTimeToDecimal(c); (h < i || h > j) && (e = "Please enter a time for " + b + " between " + d + " and " + c + ".") } else if (c.length > 0) { var h = convertTimeToDecimal(a), j = convertTimeToDecimal(c); h > j && (e = "Please enter a time for " + b + " less than or equal to " + c + ".") } else if (d.length > 0) { var h = convertTimeToDecimal(a), i = convertTimeToDecimal(d); h < i && (e = "Please enter a time for " + b + " greater than or equal to " + c + ".") } } else e = "Please enter a 12-hour time (HH:MM AM) value for " + b + "."; return e } function convertTimeToDecimal(a) { var b = a.split(":"), c = parseInt(b[0]) + parseInt(b[1]) / 60; return c } function validateSelect(a, b, c) { var d = "", e = a.selectedIndex; c.split(","); return c.indexOf(e) > -1 && (d = "Please make a valid selection for " + b + "."), d }