function initialize() { var a = addMapOverlay(); a.find("p").text("initializing map..."), google.maps.visualRefresh = !0; var b = document.getElementById("MapCanvas"); center = new google.maps.LatLng(34.8, -86.85), map = new google.maps.Map(b, { center: center, zoom: 7, scaleControl: !0, mapTypeControl: !0, mapTypeId: google.maps.MapTypeId.TERRAIN, mapTypeControlOptions: { style: google.maps.MapTypeControlStyle.DROPDOWN_MENU, mapTypeIds: [google.maps.MapTypeId.SATELLITE, google.maps.MapTypeId.TERRAIN] } }), map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(document.getElementById("googft-legend-open")), map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(document.getElementById("googft-legend")), $("#Sites-Button").click(updateSites), $("#HUC-Button").click(updateWatersheds), $("#Basin-Select").change(updateBasin), fetchData(); var c = document.getElementById("googft-legend"), d = document.getElementById("googft-legend-open"), e = document.getElementById("googft-legend-close"); c.style.display = "none", d.style.display = "block", e.style.display = "block", d.onclick = function () { c.style.display = "block", d.style.display = "none" }, e.onclick = function () { c.style.display = "none", d.style.display = "block" } } function fetchData() { $basins = $("ul.basins li"), fetchBasin(0) } function fetchBasin(a) { var b = $basins.eq(a); if (b.length > 0) { var c = b.find("input"), d = c.eq(0).val(), e = addMapOverlay(); e.find("p").text("loading " + d + "..."), console.log("water-data-all.js: fetchBasin: fetching Basin " + d); var f = c.eq(1).val(), g = encodeURIComponent(f), h = ["https://www.googleapis.com/fusiontables/v2/query"]; h.push("?sql=" + g), h.push("&key=" + apiKey), $.ajax({ url: h.join(""), dataType: "jsonp", success: function (b) { var c = new google.maps.LatLngBounds; if (b.hasOwnProperty("rows")) for (var d = b.rows, e = 0; e < d.length; e++) { var f = d[e], g = f[0]; if (g.hasOwnProperty("geometry")) var h = g.geometry, j = (f[4], h.coordinates), k = j[0]; else var l = g.geometries, j = (f[4], l[0].coordinates), k = j[0]; for (var m = new Array, n = 0; n < k.length; n++) { var o = k[n], p = o[0], q = o[1], r = new google.maps.LatLng(q, p); m.push({ lat: q, lng: p }), c.extend(r) } var s = new google.maps.Polygon({ paths: m, strokeColor: "#99784a", strokeOpacity: .8, strokeWeight: 2, fillColor: "#99784a", fillOpacity: .35 }); basinPolyArray.push(s), s.setMap(map), map.fitBounds(c), basinBounds.push(c) } fetchBasin(a + 1) } }) } else updateBasin() } function fetchWatersheds(a) { var b = $basins.eq(a), c = b.find("input"), d = new Array, e = c.eq(0).val(); $("#MapOverlay p").text("loading " + e + " watersheds..."), console.log("water-data-all.js: fetchWatersheds: fetching watersheds for Basin " + e); var f = c.eq(2).val(), g = encodeURIComponent(f), h = ["https://www.googleapis.com/fusiontables/v2/query"]; h.push("?sql=" + g), h.push("&key=" + apiKey), $.ajax({ url: h.join(""), dataType: "jsonp", success: function (b) { if (b.hasOwnProperty("rows")) { for (var c = b.rows, e = 0; e < c.length; e++) { for (var f = c[e], g = f[0], h = g.geometry, i = h.coordinates, j = i[0], k = new Array, l = 0; l < j.length; l++) { var m = j[l], n = m[0], o = m[1]; new google.maps.LatLng(o, n); k.push({ lat: o, lng: n }) } var q = new google.maps.Polygon({ paths: k, strokeColor: "#99784a", strokeOpacity: .8, strokeWeight: 2, fillColor: "#99784a", fillOpacity: .35 }); d.push(q), watershedPolyArrays[a] = d } updateWatersheds() } } }) } function fetchSites(a) { var b = $basins.eq(a), c = b.find("input"), d = new Array, e = c.eq(0).val(); $("#MapOverlay p").text("loading " + e + " sites..."), console.log("water-data-all.js: fetchSites: fetching sites for Basin " + e); var f = c.eq(3).val(), g = encodeURIComponent(f), h = ["https://www.googleapis.com/fusiontables/v2/query"]; h.push("?sql=" + g), h.push("&key=" + apiKey), $.ajax({ url: h.join(""), dataType: "json", success: function (b) { if (b.hasOwnProperty("rows")) { for (var c = b.rows, e = 0; e < c.length; e++) { var f = c[e]; d.push(addMarker(f)) } awwSiteMarkerArray[a] = d, updateSites() } } }) } function addMarker(a) { var b = { url: "../../../res/images/icons/activeMarker.png", scaledSize: new google.maps.Size(24, 30), origin: new google.maps.Point(0, 0), anchor: new google.maps.Point(12, 30) }, c = { url: "../../../res/images/icons/inactiveMarker.png", scaledSize: new google.maps.Size(16, 20), origin: new google.maps.Point(0, 0), anchor: new google.maps.Point(8, 20) }, d = a[6], e = a[7], f = a[4], g = a[11], h = new google.maps.LatLng(d, e), i = new google.maps.Marker({ position: h, title: f, icon: "1" == g ? b : c }), j = createInfoboxContent(a); return google.maps.event.addListener(i, "click", function () { closeInfoBox(), console.log(i.title), mapInfobox = new InfoBox({ content: j, disableAutoPan: !1, pixelOffset: new google.maps.Size(-140, -186), maxWidth: 110, closeBoxURL: "", boxStyle: { width: "280px" } }), mapInfobox.open(map, this), map.panTo(i.getPosition()) }), i } function createInfoboxContent(a) { var b = a[0], c = a[1], d = a[2], f = (a[3], a[4]), g = a[5], h = a[6], i = a[7], j = a[8], k = a[9]; k = parseInt(k); var l = a[10]; l = parseInt(l), console.log(" BacCt = " + l + " siteCode = " + c); var r = (a[11], a[12], a[13], a[14], "https://web.auburn.edu/aww/charts/plotChem.aspx?Sitecode=" + c + "&siteID=" + b + "&ct=" + k), s = "https://web.auburn.edu/aww/charts/plotBac.aspx?Sitecode=" + c + "&siteID=" + b + "&ct=" + l, t = '<div id="Infobox"><div id="Infobox-Content"><b>Aww Site Code:</b> ' + c + "<br /><b>Waterbody:</b> " + f + "<br /><b>Location:</b> " + g + "<br /><b>HUC12:</b> " + d + "<br /><b>Lat:</b> " + h + " <b>Long:</b> " + i + "<br /><b>Last Date:</b> " + j + "<br /><b>Chemistry Samples:</b> " + k + (k > 0 ? ' <a href="' + r + '">View Chart</a>' : "") + "<br /><b>Bacteria Samples:</b> " + l + (l > 0 ? ' <a href="' + s + '">View Chart</a>' : "") + '</div><span class="close" onclick="closeInfoBox();"></span><span class="arrow"></span></div>'; return t } function updateSites() { closeInfoBox(); var a = $("#Basin-Select"), b = a.val(), c = $basins.eq(b).find("input"), d = c.eq(0).val(), e = addMapOverlay(); e.find("p").text("loading " + d + " watersheds..."); var f = $("#Sites-Button"), g = f.prop("checked"), h = awwSiteMarkerArray[b]; null != h ? (g ? (f.closest("label").addClass("highlite"), $.each(h, function (a, b) { $awwSiteMarker = $(this), $awwSiteMarker[0].setMap(map) })) : (closeInfoBox(), f.closest("label").removeClass("highlite"), $.each(h, function (a, b) { $awwSiteMarker = $(this), $awwSiteMarker[0].setMap(null) })), e.remove()) : fetchSites(b) } function updateWatersheds() { closeInfoBox(); var a = $("#Basin-Select"), b = a.val(), c = $basins.eq(b).find("input"), d = c.eq(0).val(), e = addMapOverlay(); e.find("p").text("loading " + d + " watersheds..."); var f = $("#HUC-Button"), g = f.prop("checked"), h = watershedPolyArrays[b]; if (console.log("water-data-all.js: updateWatersheds; "), null != h) { var i = basinPolyArray[b]; g ? (f.closest("label").addClass("highlite"), $.each(h, function () { $watershed = $(this), $watershed[0].setMap(map) }), i.setMap(null)) : (f.closest("label").removeClass("highlite"), $.each(h, function () { $watershed = $(this), $watershed[0].setMap(null) }), i.setMap(map)), updateSites() } else fetchWatersheds(b) } function updateBasin() { closeInfoBox(); var a = $("#Basin-Select"), b = a.val(), c = $basins.eq(b).find("input"), d = c.eq(0).val(), e = addMapOverlay(); e.find("p").text("loading " + d + " watersheds..."), $("h1.heading").text(d), $.each(basinPolyArray, function () { var a = $(this); a[0].setMap(null) }), $.each(watershedPolyArrays, function (a, b) { null != b && $.each(b, function (a, b) { b.setMap(null) }) }), $.each(awwSiteMarkerArray, function (a, b) { null != b && $.each(b, function (a, b) { b.setMap(null) }) }), basinPolyArray[b].setMap(map), updateWatersheds(), setTimeout(function () { recenterMap() }, 600) } function recenterMap() { var a = $("#Basin-Select"), b = a.val(), c = basinBounds[b]; null != map && null != center && map.fitBounds(c) } function sizeMap() { var a = $(window).height(), b = $("header").outerHeight(), c = $("main h1").outerHeight(), d = $("main p.breadcrumbs").outerHeight(), e = a - b - c - d; $("#MapWrap").css({ height: e }), recenterMap() } function closeInfoBox() { null != mapInfobox && mapInfobox.close() } function addMapOverlay() { var a = $("#MapOverlay"); return 0 == a.length && (a = $('<div id="MapOverlay"><div class="loader"><div><div></div><div></div></div></div><p></p></div>'), $("#MapWrap").append(a)), a } var apiKey = "AIzaSyDcTMT0DVoMWt9IURdklqtRJMawlSoeoLw", map = null, center = null, bounds = null, mapInfobox = null, basinBounds = new Array, basinPolyArray = new Array, watershedPolyArrays = new Array, awwSiteMarkerArray = new Array, $basins = null; $(window).on("load", function () { sizeMap(), $(window).resize(sizeMap), initialize() });