function checkForLocallyStored() { for (var t = $("#SiteList").attr("data-type"), e = localStorage.length, o = 0; e > o; o++) { var a = localStorage.key(o), r = a.split("-"); r[1] == t && ($("#" + r[0]).addClass("alert"), $("#" + r[0]).find("div.short").prepend("<i>Incomplete</i>")) } } function setPositionWatch() { options = { enableHighAccuracy: !0, timeout: 1e3, maximumAge: 0 }, watchID = navigator.geolocation.watchPosition(updateWatchedPosition, watchedPositionError, options), retrieveGroupList() } function updateWatchedPosition(t) { currentLocation = { latitude: parseFloat(t.coords.latitude), longitude: parseFloat(t.coords.longitude) }; var e = $("#SiteList h3"); if (e.length > 0 && e.html("<h3>current gps (" + parseFloat(currentLocation.latitude).toFixed(5) + ", " + parseFloat(currentLocation.longitude).toFixed(5) + ")</h3>"), null != sitesObjectArray) for (var o = 0; o < sitesObjectArray.length; o++) { locationObject = sitesObjectArray[o], locationObject.distance = calculateDistance(locationObject); var a = $("ul #" + locationObject.awwSiteCode + " span.distance"); a.length > 0 && a.html(convertKmToEnglish(locationObject.distance)) } } function watchedPositionError(t) { alert("Current location could not be determined.") } function getCurrentLocation() { var t = $("#SiteList h2.distance span"); t.addClass("active").unbind("click"), setTimeout(function () { updateSiteDistance() }, 500) } function retrieveGroupList() { displayContentOverlay(!0), $.support.cors; var t = getToken(); null != t ? $.ajax({ url: "https://msapps.acesag.auburn.edu/aww/api/home/GetGroups", type: "GET", contentType: "application/json", dataType: "json", headers: { Authorization: "Bearer " + t }, cache: !1, success: function (t) { $("#Groups").empty(), checkForToken(t) && (groupsObjectArray = t.awW_Groups, parseGroups()) }, error: function (t, e, o) { var a = "Your session has expired."; t.hasOwnProperty("responseText") && (reponseObj = jQuery.parseJSON(t.responseText), a = reponseObj.error_description), clearTokenWithError(a) } }) : clearToken() } function parseGroups() { console.log("parseGroups"); var t = $('<label for="GroupSelector">Group</label>'), e = $('<select id="GroupSelector"><option value="">All My Sites</option></select>'); groupsObjectArray.sort(function (t, e) { return t.group_Name.toLowerCase() < e.group_Name.toLowerCase() ? -1 : e.group_Name.toLowerCase() < t.group_Name.toLowerCase() ? 1 : 0 }); for (var o = 0; o < groupsObjectArray.length; o++) { var a = groupsObjectArray[o], r = $('<option value="' + a.groupId + '">' + a.group_Name + "</option>"); e.append(r) } $("#Groups").append(t), $("#Groups").append(e), $("#GroupSelector").change(retrieveSiteList), retrieveSiteList() } function retrieveSiteList() { displayContentOverlay(!0), $.support.cors; var t = getToken(), e = $("#GroupSelector").val(); e.length > 0 ? $.ajax({ url: "https://msapps.acesag.auburn.edu/aww/api/home/GetGroupSites", type: "GET", data: { id: e }, contentType: "application/json", dataType: "json", headers: { Authorization: "Bearer " + t }, cache: !1, success: function (t) { if (console.log("successfully retrieved group sites"), $("#SiteList").empty(), checkForToken(t)) { var e = t.webMasterSites; parseLocations(e) } displayContentOverlay(!1) }, error: function (t, e, o) { var a = "Your session has expired."; t.hasOwnProperty("responseText") && (reponseObj = jQuery.parseJSON(t.responseText), a = reponseObj.error_description), clearTokenWithError(a) } }) : $.ajax({ url: "https://msapps.acesag.auburn.edu/aww/api/home/GetUserSites", type: "GET", contentType: "application/json", dataType: "json", headers: { Authorization: "Bearer " + t }, cache: !1, success: function (t) { if (console.log("successfully retrieved user sites"), $("#SiteList").empty(), checkForToken(t)) { var e = t.webMasterSites; parseLocations(e) } displayContentOverlay(!1) }, error: function (t, e, o) { var a = "Your session has expired."; t.hasOwnProperty("responseText") && (reponseObj = jQuery.parseJSON(t.responseText), a = reponseObj.error_description), clearTokenWithError(a) } }) } function parseLocations(t) { sitesObjectArray = []; for (var e = $("#SiteList").attr("data-type"), o = 0; o < t.length; o++) { locationObject = t[o]; var a = !1; "bacteria" == e ? a = locationObject.active > 0 && locationObject.bActive > 0 : "chemistry" == e && (a = locationObject.active > 0 && locationObject.cActive > 0), a && (locationObject.distance = null, sitesObjectArray.push(locationObject)) } getCurrentLocation() } function updateSiteDistance() { var t = $("#OrderSelector"), e = "1" == t.val(); (null == currentLocation.latitude || null == currentLocation.longitude) && t.val("0"); for (var o = 0; o < sitesObjectArray.length; o++) locationObject = sitesObjectArray[o], locationObject.distance = calculateDistance(locationObject); e ? sitesObjectArray.sort(function (t, e) { return parseInt(t.awwSiteCode) < parseInt(e.awwSiteCode) ? -1 : parseInt(e.awwSiteCode) < parseInt(t.awwSiteCode) ? 1 : 0 }) : sitesObjectArray.sort(function (t, e) { return parseFloat(t.distance) < parseFloat(e.distance) ? -1 : parseFloat(e.distance) < parseFloat(t.distance) ? 1 : 0 }), populateLocations() } function populateLocations() { $("#SiteList").empty(); var t = $("#GroupSelector").val(), e = sitesObjectArray.length, o = "1" == $("#OrderSelector").val(), a = $("<h2>" + (t.length > 0 ? "" : "Your ") + e + " Site" + (1 != e ? "s" : "") + (t.length > 0 ? " for " + $("#GroupSelector option:selected").text() : "") + "</h2>"); if ($("#SiteList").append(a), !o) { a.addClass("distance"); var r = $("<span></span>"); r.on("click", function () { getCurrentLocation() }), a.append(r); var n = $("<h3>current gps (" + parseFloat(currentLocation.latitude).toFixed(5) + ", " + parseFloat(currentLocation.longitude).toFixed(5) + ")</h3>") } $("#SiteList").append(n); for (var i = $('<ul class="name-link-list site-list"></ul>'), s = $("#SiteList").attr("data-type"), c = 0; c < sitesObjectArray.length; c++) { locationObject = sitesObjectArray[c]; var l = $('<li id="' + locationObject.awwSiteCode + '"></li>'), u = $('<div class="details"><table cellpadding="0" cellspacing="0"><tbody><tr><th>Site Code:</th><td>' + locationObject.awwSiteCode + "</td></tr><tr><th>Waterbody:</th><td>" + locationObject.waterbody_Name + "</td></tr><tr><th>Description:</th><td>" + locationObject.description + "</td></tr><tr><th>County:</th><td>" + locationObject.county + "</td></tr><tr><th>Latitude:</th><td>" + locationObject.latitude + "</td></tr><tr><th>Longitude:</th><td>" + locationObject.longitude + "</td></tr></tbody></table></div>"); l.append(u); var p = $('<div class="short">' + locationObject.waterbody_Name + '<br /><span class="distance">' + convertKmToEnglish(locationObject.distance) + "</span><p>" + locationObject.description + "</p></div>"); l.append(p); var d = $("<span></span>"); l.append(d); var h = null; h = "bacteria" == s ? $('<a href="../bacteria/default.html' + buildLinkQuery(locationObject) + '"><span>Select</span></a>') : $('<a href="../chemistry/default.html' + buildLinkQuery(locationObject) + '"><span>Select</span></a>'), l.append(h), i.append(l) } $("#SiteList").append(i), setupSiteList(), checkForLocallyStored() } function buildLinkQuery(t) { var e = "?AwwSiteCode=" + t.awwSiteCode + "&WebMasterSiteId=" + t.site_ID + "&Waterbody_Name=" + encodeURIComponent(t.waterbody_Name) + "&HUC11=" + t.huC11 + "&HUC8=" + t.huC8 + "&HUC6=" + t.huC6 + "&HUC4=" + t.huC4 + "&county=" + encodeURIComponent(t.county) + "&SamplingSiteLocation=" + encodeURIComponent(t.description), o = $("#GroupSelector"); if (o.length > 0) { var a = o[0].selectedIndex; a > 0 && (groupObject = groupsObjectArray[a - 1], e += "&Groupid=" + encodeURIComponent(groupObject.groupId) + "&Group_Name=" + encodeURIComponent(groupObject.group_Name) + "&Group_Abbreviation=" + encodeURIComponent(groupObject.group_Abbreviation)) } return e } function setupSiteList() { var t = $("ul.site-list li > span"); t.each(function () { var t = $(this); t.click(function () { toggleListDetail($(this), !0) }) }) } function toggleListDetail(t, e) { var o = t.parent().find("div.details"), a = t.parent().find("div.short"); e ? (t.unbind("click").click(function () { toggleListDetail($(this), !1) }), a.stop().addClass("trans").slideUp(function () { $(this).removeClass("trans") }), o.stop().addClass("trans").slideDown(function () { $(this).removeClass("trans") })) : (t.unbind("click").click(function () { toggleListDetail($(this), !0) }), a.stop().addClass("trans").slideDown(function () { $(this).removeClass("trans") }), o.stop().addClass("trans").slideUp(function () { $(this).removeClass("trans") })) } function calculateDistance(t) { if (null != t.latitude && null != t.longitude && null != currentLocation.latitude && null != currentLocation.longitude) { var e = degsToRads(t.latitude - currentLocation.latitude), o = degsToRads(t.longitude - currentLocation.longitude), a = Math.sin(e / 2) * Math.sin(e / 2) + Math.cos(degsToRads(currentLocation.latitude)) * Math.cos(degsToRads(t.latitude)) * Math.sin(o / 2) * Math.sin(o / 2), r = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), n = 6371 * r; return n } return null } function degsToRads(t) { return t * (Math.PI / 180) } function convertKmToEnglish(t) { return t = parseFloat(t), t > .81 ? (t / 1.609344).toFixed(2) + " mi" : (3280.84 * t).toFixed(0) + " ft" } var groupsObjectArray = null, sitesObjectArray = null, currentLocation = { latitude: null, longitude: null }, watchID = null; $(window).on("load", function () { validateToken(setPositionWatch), $("#OrderSelector").on("change", function () { getCurrentLocation() }) });